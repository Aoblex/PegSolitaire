name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            qt_version: '6.5.0'
            qt_arch: 'win64_mingw'
            qt_tools: 'tools_mingw90'
          - os: macos-latest
            qt_version: '6.5.0'
            qt_arch: 'clang_64'
          - os: ubuntu-latest
            qt_version: '6.5.0'
            qt_arch: 'gcc_64'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.qt_version }}
        arch: ${{ matrix.qt_arch }}
        tools: ${{ matrix.qt_tools }}

    - name: Install dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build
        sudo apt-get install -y libgl1-mesa-dev libxkbcommon-x11-0
        # Install AppImage tools
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        sudo mv appimagetool-x86_64.AppImage /usr/local/bin/appimagetool

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install cmake ninja

    - name: Install NSIS (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install nsis -y

    - name: Extract version from tag
      shell: bash
      run: |
        if [[ "${{ github.ref }}" == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION="0.0.0-dev"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build Windows
      if: runner.os == 'Windows'
      run: |
        cd packaging
        .\build-windows.bat ${{ env.VERSION }} yes

    - name: Build macOS
      if: runner.os == 'macOS'
      run: |
        cd packaging
        chmod +x build-macos.sh
        ./build-macos.sh ${{ env.VERSION }}

    - name: Build Linux
      if: runner.os == 'Linux'
      run: |
        cd packaging
        chmod +x build-linux.sh
        ./build-linux.sh ${{ env.VERSION }} appimage

    - name: Upload Windows Artifacts
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v4
      with:
        name: PegSolitaire-Windows
        path: packaging/PegSolitaire-*-Windows-Setup.exe

    - name: Upload macOS Artifacts
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v4
      with:
        name: PegSolitaire-macOS
        path: packaging/PegSolitaire-*-macOS.dmg

    - name: Upload Linux Artifacts
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v4
      with:
        name: PegSolitaire-Linux
        path: packaging/PegSolitaire-*-Linux.AppImage

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Extract version from tag
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Peg Solitaire v${{ env.VERSION }}
        body: |
          ## Peg Solitaire v${{ env.VERSION }}
          
          ### Downloads:
          - **Windows**: PegSolitaire-${{ env.VERSION }}-Windows-Setup.exe
          - **macOS**: PegSolitaire-${{ env.VERSION }}-macOS.dmg  
          - **Linux**: PegSolitaire-${{ env.VERSION }}-Linux.AppImage
          
          ### Features:
          - Cross-platform Qt6 application
          - Multiple board types (English, Diamond, Square, Anti-peg, Endgame)
          - Strategy hints and solver with loading indicators
          - Modern UI with smooth animations
        files: |
          artifacts/PegSolitaire-Windows/PegSolitaire-*-Windows-Setup.exe
          artifacts/PegSolitaire-macOS/PegSolitaire-*-macOS.dmg
          artifacts/PegSolitaire-Linux/PegSolitaire-*-Linux.AppImage
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
