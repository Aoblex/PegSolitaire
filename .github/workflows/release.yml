name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.9.1'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_mingw'
        tools: 'tools_mingw90'
    
    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release
    
    - name: Build
      run: cmake --build build --config Release
    
    - name: Deploy Qt
      run: |
        mkdir deploy
        copy build\solitaire.exe deploy\
        windeployqt.exe deploy\solitaire.exe --qmldir . --verbose 2
    
    - name: Create Windows Installer
      run: |
        # Install NSIS if needed
        choco install nsis -y
        # Create installer script
        @"
        !define APP_NAME "Peg Solitaire"
        !define APP_VERSION "1.0.0"
        !define APP_PUBLISHER "Peg Solitaire Game"
        !define APP_EXE "solitaire.exe"
        
        !include "MUI2.nsh"
        
        Name "`${APP_NAME}"
        OutFile "PegSolitaire-Windows-Installer.exe"
        InstallDir "`$PROGRAMFILES64\`${APP_NAME}"
        
        !insertmacro MUI_PAGE_WELCOME
        !insertmacro MUI_PAGE_DIRECTORY
        !insertmacro MUI_PAGE_INSTFILES
        !insertmacro MUI_PAGE_FINISH
        
        !insertmacro MUI_UNPAGE_WELCOME
        !insertmacro MUI_UNPAGE_CONFIRM
        !insertmacro MUI_UNPAGE_INSTFILES
        !insertmacro MUI_UNPAGE_FINISH
        
        !insertmacro MUI_LANGUAGE "English"
        
        Section "Install"
          SetOutPath "`$INSTDIR"
          File /r "deploy\*"
          
          CreateDirectory "`$SMPROGRAMS\`${APP_NAME}"
          CreateShortCut "`$SMPROGRAMS\`${APP_NAME}\`${APP_NAME}.lnk" "`$INSTDIR\`${APP_EXE}"
          CreateShortCut "`$DESKTOP\`${APP_NAME}.lnk" "`$INSTDIR\`${APP_EXE}"
          
          WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "DisplayName" "`${APP_NAME}"
          WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}" "UninstallString" "`$INSTDIR\uninstall.exe"
          WriteUninstaller "`$INSTDIR\uninstall.exe"
        SectionEnd
        
        Section "Uninstall"
          Delete "`$INSTDIR\*.*"
          RMDir /r "`$INSTDIR"
          Delete "`$SMPROGRAMS\`${APP_NAME}\*.*"
          RMDir "`$SMPROGRAMS\`${APP_NAME}"
          Delete "`$DESKTOP\`${APP_NAME}.lnk"
          DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\`${APP_NAME}"
        SectionEnd
        "@ | Out-File -FilePath installer.nsi -Encoding UTF8
        makensis installer.nsi
    
    - name: Upload Windows Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-release
        path: |
          PegSolitaire-Windows-Installer.exe
          deploy/

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.9.1'
        host: 'mac'
        target: 'desktop'
    
    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release
    
    - name: Build
      run: cmake --build build --config Release
    
    - name: Deploy Qt
      run: |
        macdeployqt build/solitaire.app -dmg
    
    - name: Rename DMG
      run: mv build/solitaire.dmg PegSolitaire-macOS.dmg
    
    - name: Upload macOS Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-release
        path: PegSolitaire-macOS.dmg

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y qt6-base-dev qt6-tools-dev cmake build-essential
    
    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release
    
    - name: Build
      run: cmake --build build --config Release
    
    - name: Install linuxdeploy
      run: |
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
        chmod +x linuxdeploy-x86_64.AppImage linuxdeploy-plugin-qt-x86_64.AppImage
    
    - name: Create AppImage
      run: |
        mkdir -p AppDir/usr/bin
        cp build/solitaire AppDir/usr/bin/
        
        # Create desktop file
        cat > AppDir/solitaire.desktop << EOF
        [Desktop Entry]
        Type=Application
        Name=Peg Solitaire
        Exec=solitaire
        Icon=solitaire
        Categories=Game;
        EOF
        
        # Copy icon
        mkdir -p AppDir/usr/share/icons/hicolor/64x64/apps
        cp resources/icon.svg AppDir/usr/share/icons/hicolor/64x64/apps/solitaire.svg
        
        # Create AppImage
        export QMAKE=/usr/bin/qmake6
        ./linuxdeploy-x86_64.AppImage --appdir AppDir --plugin qt --output appimage
    
    - name: Rename AppImage
      run: mv Peg_Solitaire-*.AppImage PegSolitaire-Linux.AppImage
    
    - name: Upload Linux Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-release
        path: PegSolitaire-Linux.AppImage

  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          windows-release/PegSolitaire-Windows-Installer.exe
          macos-release/PegSolitaire-macOS.dmg
          linux-release/PegSolitaire-Linux.AppImage
        body: |
          ## Peg Solitaire Release
          
          ### Features
          - Classic Peg Solitaire gameplay
          - Multiple board types (English, Diamond, Square)
          - Special game modes (Anti-Peg, Endgame)
          - Strategy hints and move suggestions
          - Beautiful UI with smooth animations
          
          ### Installation
          - **Windows**: Download and run `PegSolitaire-Windows-Installer.exe`
          - **macOS**: Download and open `PegSolitaire-macOS.dmg`
          - **Linux**: Download `PegSolitaire-Linux.AppImage`, make it executable, and run
          
          ### System Requirements
          - Windows 10/11 (64-bit)
          - macOS 10.15 or later
          - Linux (64-bit) with modern desktop environment
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
