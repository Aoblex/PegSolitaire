name: CI Build

on:
  push:
    branches: [ main, master, develop ]
    paths-ignore:
      - '**.md'
      - 'prompts/**'
  pull_request:
    branches: [ main, master, develop ]
    paths-ignore:
      - '**.md'
      - 'prompts/**'

env:
  QT_VERSION: 6.5.3
  BUILD_TYPE: Release

jobs:
  build-test:
    runs-on: windows-2022
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        host: windows
        target: desktop
        arch: win64_msvc2019_64
        modules: 'qtbase qttools'
        cache: true

    - name: Setup CMake
      uses: cmake-js/get-cmake@latest

    - name: Configure CMake
      run: |
        cmake -B build -S . `
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} `
          -DCMAKE_PREFIX_PATH="${{ env.Qt6_DIR }}" `
          -G "Visual Studio 17 2022" `
          -A x64

    - name: Build
      run: cmake --build build --config ${{ env.BUILD_TYPE }} --parallel

    - name: Test executable
      run: |
        if (Test-Path "build\${{ env.BUILD_TYPE }}\PegSolitaire.exe") {
          Write-Host "✅ PegSolitaire.exe built successfully"
          $fileInfo = Get-Item "build\${{ env.BUILD_TYPE }}\PegSolitaire.exe"
          Write-Host "File size: $($fileInfo.Length) bytes"
          Write-Host "Last modified: $($fileInfo.LastWriteTime)"
        } else {
          Write-Host "❌ PegSolitaire.exe not found"
          exit 1
        }
